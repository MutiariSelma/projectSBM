# -*- coding: utf-8 -*-
"""Streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XovYtTkM4s0l_CijnrBBxvpgT82XEhGr
"""

import streamlit as st
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler

# Judul app
st.title("Klasifikasi Level Stres Mahasiswa")

# Upload file
uploaded_file = st.file_uploader("Upload file CSV", type="csv")
if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)

    # Map dan preprocessing
    sports_map = {'No Sports': 0, '1-3 times': 1, '4-6 times': 2, '7+ times': 3}
    sleep_map = {'2-4 hrs': 0, '4-6 hrs': 1, '7-8 hrs': 2}
    df['sports'] = df['sports_engagement'].map(sports_map)
    df['avg_sleep'] = df['average_sleep'].map(sleep_map)

    # Fitur dan label
    features = ['sports', 'avg_sleep', 'academic_pressure', 'depression', 'anxiety', 'future_insecurity', 'social_relationships']
    df['stress_score'] = df['sports'] + df['avg_sleep'] + df['academic_pressure'] + df['depression'] + df['anxiety'] + df['future_insecurity'] + df['social_relationships']

    def categorize_stress(score):
        if score <= 9:
            return 'Normal'
        elif score <= 14:
            return 'Mild'
        elif score <= 19:
            return 'Moderate'
        elif score <= 24:
            return 'Severe'
        else:
            return 'Extremely Severe'

    df['stress_level'] = df['stress_score'].apply(categorize_stress)
    df['stress_level'] = df['stress_level'].replace({'Normal': 'Mild', 'Extremely Severe': 'Severe'})

    X = df[features]
    y = df['stress_level']

    scaler = StandardScaler()
    X_scaled = scaler.fit_transform(X)

    rf_model = RandomForestClassifier(n_estimators=100, random_state=42)
    rf_model.fit(X_scaled, y)

    st.success("Model berhasil dilatih!")

    # Prediksi manual (opsional)
    st.subheader("Coba Prediksi Level Stres")
    user_input = []
    for f in features:
        val = st.slider(f"{f}", 0, 3 if f in ['sports', 'avg_sleep'] else 5, 1)
        user_input.append(val)

    prediction = rf_model.predict([user_input])[0]
    st.write(f"Prediksi tingkat stres kamu: **{prediction}**")