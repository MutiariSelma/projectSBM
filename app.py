# -*- coding: utf-8 -*-
"""Untitled

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XovYtTkM4s0l_CijnrBBxvpgT82XEhGr
"""

import streamlit as st
import pandas as pd
from sklearn.neighbors import KNeighborsClassifier
from sklearn.preprocessing import StandardScaler

st.title("Klasifikasi Level Stres Mahasiswa dengan KNN")

uploaded_file = st.file_uploader("Upload file CSV", type="csv")

if uploaded_file:
    df = pd.read_csv(uploaded_file)

    sports_map = {'No Sports': 0, '1-3 times': 1, '4-6 times': 2, '7+ times': 3}
    sleep_map = {'2-4 hrs': 0, '4-6 hrs': 1, '7-8 hrs': 2}
    df['sports'] = df['sports_engagement'].map(sports_map)
    df['avg_sleep'] = df['average_sleep'].map(sleep_map)

    features = ['sports', 'avg_sleep', 'academic_pressure', 'depression', 'anxiety', 'future_insecurity', 'social_relationships']

    df['stress_score'] = df[features].sum(axis=1)

    def categorize_stress(score):
        if score <= 9:
            return 'Normal'
        elif score <= 14:
            return 'Mild'
        elif score <= 19:
            return 'Moderate'
        elif score <= 24:
            return 'Severe'
        else:
            return 'Extremely Severe'df['stress_level'] = df['stress_score'].apply(categorize_stress)
    df['stress_level'] = df['stress_level'].replace({'Normal': 'Mild', 'Extremely Severe': 'Severe'})

    df = df.dropna(subset=features + ['stress_level'])
    
    X = df[features]
    y = df['stress_level']

    scaler = StandardScaler()
    X_scaled = scaler.fit_transform(X)

    knn = KNeighborsClassifier(n_neighbors=3)
    knn.fit(X_scaled, y)

    st.success("Model KNN berhasil dilatih!")

    st.subheader("Coba Prediksi Level Stres")

    user_input = []
    for f in features:
        max_val = 3 if f in ['sports', 'avg_sleep'] else 5
        val = st.slider(f"{f}", 0, max_val, 1)
        user_input.append(val)

    user_scaled = scaler.transform([user_input])
    prediction = knn.predict(user_scaled)[0]

    st.write(f"Prediksi tingkat stres kamu: **{prediction}**")
else:
    st.info("Silakan upload file CSV terlebih dahulu untuk melatih model.")
